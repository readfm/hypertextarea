<div class='app' id='Rets'>
	<header>
		<button class='select' id='Rets-class'></button>
		<input id='Rets-query'/>
	</header>

	<div class='tip' id='Rets-classes'>
		<span class='tri'></span>
		<div class='option'>Residential</div>
		<div class='option'>Commercial</div>
		<div class='option'>Land</div>
		<div class='option'>Mobile</div>
		<div class='option'>CrossProperty</div>
		<div class='option'>ResidentialIncome</div>
		<div class='option'>ResidentialLease</div>
	</div>

	<div id='Rets-list'></div>

	<footer>
		<button id='Rets-save' class='a'>Save items</button>
	</footer>
</div>

<script>
$(function(){
	var q = '(State=|CA),(Status=|A),(TimestampModified='+(new Date()).yyyymmdd()+'T00:00:00+)';
	$('#Rets-query').val(q);
});
window.Rets = {
	zip: [],
	placeRecords: function(records){
		var $list = $('#Rets-list').empty();
		records.forEach(function(d){
			var address = d.StreetNumber+' '+d.StreetName+' '+(d.StreetSuffix?(d.StreetSuffix+' '):'')+', '+d.City+', '+d.State+' '+d.PostalCode;
			var item = {
				record: d,
				description: d.PropertyDescription,
				name: address.url({noDiacritics: true}),
				title: (d.StreetNumber+' '+d.StreetName+' '+(d.StreetSuffix || '')),
				info: {
					address: address,

					key: d.SourceKey,

					numBedrooms: parseInt(d.Bedrooms),
					numBaths: parseInt(d.BathsTotal),
					numSqft: parseInt(d.SquareFootageStructure),

					state: d.State,
					county: d.County,
					city: d.City,

					zip: d.PostalCode,

					streetNumber: d.StreetNumber,
					streetName: d.StreetName,

					class: d.class
				},
				price: d.ListPrice,
			};
			
			var $item = Catalog.build(item);
			$item.attr('id', 'rets-'+item.info.key)
			$item.addClass('record');
			$list.append($item);
		});
	},

	save: function(item, cb){
		$.query('/tree/add', item, function(r){
			if(r.item && cb)
				cb(r.item)
		});
	},

	getImages: function(SourceKey, cb){
		$.query('/wyndimar/rets', {query: '(ClassSourceKey='+SourceKey+')|(ClassKey=2)', resource: 'Media', class: 'Media'}, function(r){
			if(r.records && r.records.length){
				var thumbs = [];

				r.records.forEach(function(m, i){
					thumbs.push(m.MediaURL);
				});

				cb(thumbs);
			}
			else
				cb();
		});
	},

	saveRecord: function(item, cb){
		var $item = $(item);
		var d = $item.data();
		
		if(Rets.zip.indexOf(d.record.PostalCode) < 0) return cb();

		if(!d.geo){
			var geocoder = new google.maps.Geocoder();
            geocoder.geocode({
            	'address': d.title
           	}, function (results, status){
            	if(status == google.maps.GeocoderStatus.OK){
            		var result = results[0];
            		d.info.address = results[0].formatted_address;

            		$item.children('.item-pinMap').show().attr('title', d.info.address);
            		d.geo = [results[0].geometry.location.lat(), results[0].geometry.location.lng()]
            		
            		Rets.getImages(d.record.SourceKey, function(images){
            			d.images = images || [];

            			ws.send({
							cmd: 'save',
							item: d,
							collection: 'catalog'
						});

						var $newItem = Catalog.build(d);
						$item.replaceWith($newItem);
						if(cb) cb();

						$newItem.css('box-shadow', '0 0 10px green');
            		});
            	}
            });	
		}

		return;

		if(!d.thumbs)
			$.query('/wyndimar/rets', {query: '(ClassSourceKey='+d.record.SourceKey+')|(ClassKey=2)', resource: 'Media', class: 'Media'}, function(r){
				if(r.records && r.records.length){
					d.thumbs = [];

					console.log(r.records);
					var num = 0;

					var tasks = [];
					r.records.forEach(function(m, i){
						tasks.push(function(){
							img.saveImage(m.MediaURL, function(file){
								num++;

								if(file){
									if(i == 0){
										d.thumb = file.id;
										$item.children('.thumb').css('background-image', 'url(/thumb/'+file.id+')');
									}

									d.thumbs.push(file.id);
								}

								console.log(d.thumbs);
								console.log(d.thumbs.length);

								if(num == r.records.length){
									ws.send({
										cmd: 'save',
										item: d,
										collection: 'catalog'
									});
									var $newItem = Catalog.build(d);
									$item.replaceWith($newItem);
									if(cb) cb();
									$newItem.css('box-shadow', '0 0 10px green');
								}

								var task = tasks.shift()
								if(task) task();
							});
						});
					});
					
					var task = tasks.shift()
					if(task) task();
				}
			});
	},
};

(function(){
	$('#Rets-query').bindEnter(function(){
		$.query('/wyndimar/rets', {query: this.value, class: $('#Rets-class').text()}, function(r){
			console.log(r.records.length);
			Rets.placeRecords(r.records);
		});
	});

	var task = false,
		queue = [],
		next = function(){
			task = queue.shift();
			if(task) task();
			else $('#Rets-save').show();
		};

	$('#Rets-classes > .option').click(function(){
		tip.hide();
		$('#Rets-class').text($(this).text());
	}).first().click();

	$('#Rets-class').tip({
		pos: 'b',
		fix: 'c',
		id: 'Rets-classes',
		event: 'click',
	})

	$('#Rets-save').click(function(){
		var keys = [];
		$('#Rets-list > .record').each(function(){
			var d = $(this).data();

			keys.push(d.info.key);
		});

		if(keys.length)
			ws.send({
				cmd: 'get',
				filter: {
					'info.key': {$in: keys}
				},
				collection: 'catalog'
			}, function(r){
				if(r.items) r.items.forEach(function(item){
					var $item = $('#rets-'+item.info.key);
					if($item.length){
						var $newItem = Catalog.build(item);
						$item.replaceWith($newItem);
						$newItem.css('box-shadow', '0 0 10px orange');
					}
				});

				$('#Rets-list > .record').each(function(){
					$('#Rets-save').hide();
					var item = this;
					queue.push(function(){
						Rets.saveRecord(item, next);
					});
					if(!task) next();
				});
			});
	});
})();

Rets.zip = [92683,92804,92703,92805,90631,92677,92627,92707,92801,92630,92647,92701,92646,92780,92708,92840,92870,92653,92626,90630,92691,92833,92692,92802,90620,92705,92843,92648,92688,92656,92612,92867,92807,92886,92869,92706,92672,92831,92675,92821,92806,90621,92649,92679,92841,90680,92660,92604,92629,92620,92651,92832,90740,92844,92868,92614,92663,92887,90720,92835,92808,92865,92606,92782,92845,92866,90623,92673,92625,92610,92655,92624,92618,92861,92657,92661,92662,92602,92676,92823,90742,92694,90743,90201,90650,90011,91331,90280,90250,90805,90044,91744,91342,90255,91706,90026,90706,90262,91766,90022,91335,90019,90004,93550,91402,90042,90660,90813,91732,90006,90640,91770,91351,90003,90731,90034,93535,91702,91605,91343,90037,90063,90066,90745,90723,90001,91801,91745,90744,90703,90221,91405,91406,90046,91304,90033,90806,93536,90027,91344,90047,90023,90220,90638,90247,90065,90016,90018,90032,91767,91765,91352,91748,91733,91606,91789,90043,90007,90002,90057,90024,91790,91306,90804,90005,90242,90020,90503,90029,91205,90275,90025,91016,91401,90501,90241,91350,90045,90815,90802,90031,91104,90605,91776,90059,90604,90301,90278,90808,91601,91367,91001,91768,90810,93534,91750,91311,90505,91773,91711,90277,91722,90266,91340,93551,90049,90260,90036,91754,90038,91107,91780,90606,91325,90601,90230,90807,90504,91792,90803,91206,90291,91746,90008,90302,91007,91791,91803,91321,90028,90012,90712,91006,91731,90222,91423,90039,91505,90062,91214,90304,90270,91326,91607,90041,90303,91316,90035,90713,91103,91010,91356,91755,91042,91604,90602,90405,90249,91504,91324,91364,90746,93552,91740,91741,91355,91301,90710,90274,90240,90061,91724,90064,91030,91201,90403,91411,91302,91106,91775,91303,90272,91384,91202,91403,90068,90210,90048,90732,90717,90715,90017,90069,91011,90404,90265,90814,90603,91040,90254,91506,91501,91354,90292,91723,91345,90502,91204,91208,91101,91602,90701,90670,90245,90015,90232,90716,91203,90305,91108,91436,91502,90212,90293,90402,93543,91024,90077,90248,91105,91381,91207,90040,90013,90755,90211,93510,90056,91020,93591,90290,90401,90704,90014,90058,90021,93532,90067,90010,93553,93544,90822,93563,91759,91608,90263,90261,90071,90747,92503,92509,92553,92882,92201,92507,92592,92557,92504,92879,92234,92506,92544,92530,92505,92570,92562,92543,92260,92571,92545,92220,92591,92262,92225,92253,92551,92236,92240,92860,92881,92583,92211,92595,92501,91752,92264,92563,92586,92223,92274,92880,92508,92584,92883,92587,92555,92270,92254,92585,92320,92567,92276,92241,92582,92532,92548,92596,92210,92539,92549,92590,92203,92230,92536,92561,92239,92518,92282,92258,93030,93033,93065,93063,93003,93010,91360,91320,91362,93021,93001,93060,93004,93041,93035,93012,91307,93023,91361,93015,91377,93022,93252,93066,93040,92243,92231,92227,92251,92250,92233,92283,92249,92257,92281,92273,92275,92259,92266,92335,92376,91710,92345,91709,92392,91761,92336,92404,91762,91730,92324,92407,91764,91786,92346,92410,92399,91701,92374,91763,92307,92311,92373,92337,92308,92316,92405,92411,91784,91737,92284,92301,92377,92354,92277,91739,92371,92394,92408,92313,92325,92314,92352,92310,92252,92359,92363,92382,92315,92356,92342,92397,92372,92256,92365,92317,92285,92386,93562,92347,92401,92242,92398,92358,92339,92309,92368,92327,92321,92333,92268,92341,92318,92305,92364,92332,92267,92280,92304,92323,91743,92054,92126,91910,92105,91911,92154,92114,91950,92083,92021,92115,91977,92020,92071,92056,92069,92117,92025,92027,92064,92113,92104,92024,92102,92129,92111,92057,92109,92084,91941,92026,92009,92037,92128,92040,92028,92019,92139,92008,92122,92116,92065,92124,92103,92131,92173,92130,92107,92101,91932,92120,92123,91945,92118,92110,91942,92119,92127,92106,92029,91902,91901,92082,92014,91913,92075,92108,92007,91915,91935,91978,92067,92078,92121,92003,92036,91906,92004,91914,92061,92059,91916,91962,91905,92091,92086,92070,91963,91917,91931,91934,92066,92060,91980,91948];

</script>

<style>
	#Rets-query{
		width: calc(100% - 220px);
	}

	#Rets-class{
		width: 170px;
		text-align: left;
	}
</style>